#!/usr/bin/env bash

source /hooks/common/functions.sh

hook::config() {
  cat <<EOF
{
  "configVersion": "v1",
  "kubernetes": [
    {
      "apiVersion": "v1",
      "kind": "secret",
      "executeHookOnEvent": [
        "Deleted"
      ],
      "labelSelector": {
        "matchLabels": {
           "secret-copier": "yes"
        }
      },
      "namespace": {
        "nameSelector": {
          "matchNames": [
            "default",
            "rook-ceph",
            "rabbitmq",
            "monitoring",
            "gitea",
            "kurl",
            "istio-system",
            "metallb"
          ]
        }
      }
    }
  ]
}
EOF
}

hook::trigger() {
  # ignore Synchronization for simplicity
  type=$(jq -r '.[0].type' $BINDING_CONTEXT_PATH)
  if [[ $type == "Synchronization" ]] ; then
    echo Got Synchronization event
    exit 0
  fi

  #if secret got deleted in any of the infra namespace
  for secret in $(jq -r '.[] | .object.metadata.name' $BINDING_CONTEXT_PATH | grep -E 'default|monitoring|istio-system|rabbitmq|gitea|rook-ceph|metallb|kurl|kube-system|kube-node-lease|kube-public')
  do
     for namespace in $(kubectl get namespace -o json | jq -r '.items[] | select(.status.phase == "Active") | .metadata.name' | grep -vE 'default|monitoring|istio-system|rabbitmq|gitea|rook-ceph|metallb|kurl|kube-system|kube-node-lease|kube-public')
     do
         kubectl -n $namespace delete configmap $secret
     done
  done
}

common::run_hook "$@"

#!/usr/bin/env bash
#
# Hook with a schedule binding: sync secrets with the 'secret-copier: yes' label from the 'default' namespace to the other namespaces.
#

source /hooks/common/functions.sh

hook::config() {
  cat <<EOF
{
  "configVersion": "v1",
  "schedule": [
    {
      "allowFailure": true,
      "crontab": "*/15 * * * *"
    }
  ]
}
EOF
}

hook::trigger() {
  # Copy from namespaces
  dt=$(date '+%d/%m/%Y %H:%M:%S')
  echo "ConfigMapSync Started at $dt"
  for orig_namespace in $(kubectl get namespace -o json | jq -r '.items[] | select(.status.phase == "Active") | .metadata.name' | grep -E 'default|monitoring|istio-system|rabbitmq|gitea|rook-ceph|metallb|kurl|kube-system|kube-node-lease|kube-public')
  do
    for secret in $(kubectl -n $orig_namespace get configmap -l secret-copier=yes -o name);
    do
      #copy to namespaces ignoring source namespaces
      for namespace in $(kubectl get namespace -o json | jq -r '.items[] | select(.status.phase == "Active") | .metadata.name' | grep -vE 'default|monitoring|istio-system|rabbitmq|gitea|rook-ceph|metallb|kurl|kube-system|kube-node-lease|kube-public')
      do
        kubectl -n $orig_namespace get $secret -o json | jq -r ".metadata.namespace=\"${namespace}\" |.metadata |= with_entries(select([.key] | inside([\"name\", \"namespace\"])))" | kubectl::replace_or_create
      done
    done
  done
}

common::run_hook "$@"
